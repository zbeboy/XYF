/*
 * This file is generated by jOOQ.
*/
package com.rongxingyn.xyf.domain.tables.daos;


import com.rongxingyn.xyf.domain.tables.Users;
import com.rongxingyn.xyf.domain.tables.records.UsersRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UsersDao extends DAOImpl<UsersRecord, com.rongxingyn.xyf.domain.tables.pojos.Users, String> {

    /**
     * Create a new UsersDao without any configuration
     */
    public UsersDao() {
        super(Users.USERS, com.rongxingyn.xyf.domain.tables.pojos.Users.class);
    }

    /**
     * Create a new UsersDao with an attached configuration
     */
    @Autowired
    public UsersDao(Configuration configuration) {
        super(Users.USERS, com.rongxingyn.xyf.domain.tables.pojos.Users.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(com.rongxingyn.xyf.domain.tables.pojos.Users object) {
        return object.getUsername();
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.rongxingyn.xyf.domain.tables.pojos.Users> fetchByUsername(String... values) {
        return fetch(Users.USERS.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public com.rongxingyn.xyf.domain.tables.pojos.Users fetchOneByUsername(String value) {
        return fetchOne(Users.USERS.USERNAME, value);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.rongxingyn.xyf.domain.tables.pojos.Users> fetchByPassword(String... values) {
        return fetch(Users.USERS.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>disabled IN (values)</code>
     */
    public List<com.rongxingyn.xyf.domain.tables.pojos.Users> fetchByDisabled(Byte... values) {
        return fetch(Users.USERS.DISABLED, values);
    }

    /**
     * Fetch records that have <code>account_expired IN (values)</code>
     */
    public List<com.rongxingyn.xyf.domain.tables.pojos.Users> fetchByAccountExpired(Byte... values) {
        return fetch(Users.USERS.ACCOUNT_EXPIRED, values);
    }

    /**
     * Fetch records that have <code>account_locked IN (values)</code>
     */
    public List<com.rongxingyn.xyf.domain.tables.pojos.Users> fetchByAccountLocked(Byte... values) {
        return fetch(Users.USERS.ACCOUNT_LOCKED, values);
    }

    /**
     * Fetch records that have <code>credentials_expired IN (values)</code>
     */
    public List<com.rongxingyn.xyf.domain.tables.pojos.Users> fetchByCredentialsExpired(Byte... values) {
        return fetch(Users.USERS.CREDENTIALS_EXPIRED, values);
    }
}
