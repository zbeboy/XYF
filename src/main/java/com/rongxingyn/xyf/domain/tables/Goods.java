/*
 * This file is generated by jOOQ.
*/
package com.rongxingyn.xyf.domain.tables;


import com.rongxingyn.xyf.domain.Indexes;
import com.rongxingyn.xyf.domain.Keys;
import com.rongxingyn.xyf.domain.Xyf;
import com.rongxingyn.xyf.domain.tables.records.GoodsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Goods extends TableImpl<GoodsRecord> {

    private static final long serialVersionUID = 878958639;

    /**
     * The reference instance of <code>xyf.goods</code>
     */
    public static final Goods GOODS = new Goods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GoodsRecord> getRecordType() {
        return GoodsRecord.class;
    }

    /**
     * The column <code>xyf.goods.goods_id</code>.
     */
    public final TableField<GoodsRecord, String> GOODS_ID = createField("goods_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>xyf.goods.goods_name</code>.
     */
    public final TableField<GoodsRecord, String> GOODS_NAME = createField("goods_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>xyf.goods.goods_price</code>.
     */
    public final TableField<GoodsRecord, Double> GOODS_PRICE = createField("goods_price", org.jooq.impl.SQLDataType.DOUBLE.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DOUBLE)), this, "");

    /**
     * The column <code>xyf.goods.goods_brief</code>.
     */
    public final TableField<GoodsRecord, String> GOODS_BRIEF = createField("goods_brief", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>xyf.goods.goods_recommend</code>.
     */
    public final TableField<GoodsRecord, Integer> GOODS_RECOMMEND = createField("goods_recommend", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>xyf.goods.is_stick</code>.
     */
    public final TableField<GoodsRecord, Byte> IS_STICK = createField("is_stick", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>xyf.goods.stick_serial</code>.
     */
    public final TableField<GoodsRecord, Integer> STICK_SERIAL = createField("stick_serial", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>xyf.goods.goods_serial</code>.
     */
    public final TableField<GoodsRecord, Integer> GOODS_SERIAL = createField("goods_serial", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>xyf.goods.classify_id</code>.
     */
    public final TableField<GoodsRecord, Integer> CLASSIFY_ID = createField("classify_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>xyf.goods</code> table reference
     */
    public Goods() {
        this(DSL.name("goods"), null);
    }

    /**
     * Create an aliased <code>xyf.goods</code> table reference
     */
    public Goods(String alias) {
        this(DSL.name(alias), GOODS);
    }

    /**
     * Create an aliased <code>xyf.goods</code> table reference
     */
    public Goods(Name alias) {
        this(alias, GOODS);
    }

    private Goods(Name alias, Table<GoodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Goods(Name alias, Table<GoodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xyf.XYF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GOODS_CLASSIFY_ID, Indexes.GOODS_GOODS_NAME, Indexes.GOODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GoodsRecord> getPrimaryKey() {
        return Keys.KEY_GOODS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GoodsRecord>> getKeys() {
        return Arrays.<UniqueKey<GoodsRecord>>asList(Keys.KEY_GOODS_PRIMARY, Keys.KEY_GOODS_GOODS_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<GoodsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GoodsRecord, ?>>asList(Keys.GOODS_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Goods as(String alias) {
        return new Goods(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Goods as(Name alias) {
        return new Goods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Goods rename(String name) {
        return new Goods(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Goods rename(Name name) {
        return new Goods(name, null);
    }
}
