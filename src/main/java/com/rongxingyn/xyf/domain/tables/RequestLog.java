/*
 * This file is generated by jOOQ.
*/
package com.rongxingyn.xyf.domain.tables;


import com.rongxingyn.xyf.domain.Indexes;
import com.rongxingyn.xyf.domain.Keys;
import com.rongxingyn.xyf.domain.Xyf;
import com.rongxingyn.xyf.domain.tables.records.RequestLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequestLog extends TableImpl<RequestLogRecord> {

    private static final long serialVersionUID = 259260376;

    /**
     * The reference instance of <code>xyf.request_log</code>
     */
    public static final RequestLog REQUEST_LOG = new RequestLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RequestLogRecord> getRecordType() {
        return RequestLogRecord.class;
    }

    /**
     * The column <code>xyf.request_log.log_id</code>.
     */
    public final TableField<RequestLogRecord, String> LOG_ID = createField("log_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>xyf.request_log.request_url</code>.
     */
    public final TableField<RequestLogRecord, String> REQUEST_URL = createField("request_url", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>xyf.request_log.request_param</code>.
     */
    public final TableField<RequestLogRecord, String> REQUEST_PARAM = createField("request_param", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>xyf.request_log.result</code>.
     */
    public final TableField<RequestLogRecord, String> RESULT = createField("result", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>xyf.request_log.channel_name</code>.
     */
    public final TableField<RequestLogRecord, String> CHANNEL_NAME = createField("channel_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>xyf.request_log.request_date</code>.
     */
    public final TableField<RequestLogRecord, Timestamp> REQUEST_DATE = createField("request_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>xyf.request_log</code> table reference
     */
    public RequestLog() {
        this(DSL.name("request_log"), null);
    }

    /**
     * Create an aliased <code>xyf.request_log</code> table reference
     */
    public RequestLog(String alias) {
        this(DSL.name(alias), REQUEST_LOG);
    }

    /**
     * Create an aliased <code>xyf.request_log</code> table reference
     */
    public RequestLog(Name alias) {
        this(alias, REQUEST_LOG);
    }

    private RequestLog(Name alias, Table<RequestLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private RequestLog(Name alias, Table<RequestLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xyf.XYF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REQUEST_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RequestLogRecord> getPrimaryKey() {
        return Keys.KEY_REQUEST_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RequestLogRecord>> getKeys() {
        return Arrays.<UniqueKey<RequestLogRecord>>asList(Keys.KEY_REQUEST_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestLog as(String alias) {
        return new RequestLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RequestLog as(Name alias) {
        return new RequestLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RequestLog rename(String name) {
        return new RequestLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RequestLog rename(Name name) {
        return new RequestLog(name, null);
    }
}
