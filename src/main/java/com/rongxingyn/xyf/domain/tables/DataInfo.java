/*
 * This file is generated by jOOQ.
*/
package com.rongxingyn.xyf.domain.tables;


import com.rongxingyn.xyf.domain.Indexes;
import com.rongxingyn.xyf.domain.Keys;
import com.rongxingyn.xyf.domain.Xyf;
import com.rongxingyn.xyf.domain.tables.records.DataInfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataInfo extends TableImpl<DataInfoRecord> {

    private static final long serialVersionUID = -1075870772;

    /**
     * The reference instance of <code>xyf.data_info</code>
     */
    public static final DataInfo DATA_INFO = new DataInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DataInfoRecord> getRecordType() {
        return DataInfoRecord.class;
    }

    /**
     * The column <code>xyf.data_info.data_key</code>.
     */
    public final TableField<DataInfoRecord, String> DATA_KEY = createField("data_key", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>xyf.data_info.data_value</code>.
     */
    public final TableField<DataInfoRecord, String> DATA_VALUE = createField("data_value", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * Create a <code>xyf.data_info</code> table reference
     */
    public DataInfo() {
        this(DSL.name("data_info"), null);
    }

    /**
     * Create an aliased <code>xyf.data_info</code> table reference
     */
    public DataInfo(String alias) {
        this(DSL.name(alias), DATA_INFO);
    }

    /**
     * Create an aliased <code>xyf.data_info</code> table reference
     */
    public DataInfo(Name alias) {
        this(alias, DATA_INFO);
    }

    private DataInfo(Name alias, Table<DataInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private DataInfo(Name alias, Table<DataInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xyf.XYF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DATA_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DataInfoRecord> getPrimaryKey() {
        return Keys.KEY_DATA_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DataInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<DataInfoRecord>>asList(Keys.KEY_DATA_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataInfo as(String alias) {
        return new DataInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataInfo as(Name alias) {
        return new DataInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DataInfo rename(String name) {
        return new DataInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DataInfo rename(Name name) {
        return new DataInfo(name, null);
    }
}
